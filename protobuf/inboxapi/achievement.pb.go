// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: inboxapi/achievement.proto

package inboxapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserAchievementListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserAchievementListRequest) Reset() {
	*x = GetUserAchievementListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inboxapi_achievement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAchievementListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAchievementListRequest) ProtoMessage() {}

func (x *GetUserAchievementListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inboxapi_achievement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAchievementListRequest.ProtoReflect.Descriptor instead.
func (*GetUserAchievementListRequest) Descriptor() ([]byte, []int) {
	return file_inboxapi_achievement_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserAchievementListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Progress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goal    uint32 `protobuf:"varint,1,opt,name=goal,proto3" json:"goal,omitempty"`
	Current uint32 `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *Progress) Reset() {
	*x = Progress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inboxapi_achievement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Progress) ProtoMessage() {}

func (x *Progress) ProtoReflect() protoreflect.Message {
	mi := &file_inboxapi_achievement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Progress.ProtoReflect.Descriptor instead.
func (*Progress) Descriptor() ([]byte, []int) {
	return file_inboxapi_achievement_proto_rawDescGZIP(), []int{1}
}

func (x *Progress) GetGoal() uint32 {
	if x != nil {
		return x.Goal
	}
	return 0
}

func (x *Progress) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size string `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inboxapi_achievement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_inboxapi_achievement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_inboxapi_achievement_proto_rawDescGZIP(), []int{2}
}

func (x *Image) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Image) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type AchievementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title              string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle           string                 `protobuf:"bytes,3,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Description        string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AchievementMessage string                 `protobuf:"bytes,5,opt,name=achievement_message,json=achievementMessage,proto3" json:"achievement_message,omitempty"`
	Images             []*Image               `protobuf:"bytes,6,rep,name=images,proto3" json:"images,omitempty"`
	Progress           *Progress              `protobuf:"bytes,7,opt,name=progress,proto3" json:"progress,omitempty"`
	AchievedAt         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=achieved_at,json=achievedAt,proto3" json:"achieved_at,omitempty"`
	ViewedAt           *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=viewed_at,json=viewedAt,proto3" json:"viewed_at,omitempty"`
	Exclusive          bool                   `protobuf:"varint,10,opt,name=exclusive,proto3" json:"exclusive,omitempty"`
}

func (x *AchievementInfo) Reset() {
	*x = AchievementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inboxapi_achievement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementInfo) ProtoMessage() {}

func (x *AchievementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_inboxapi_achievement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementInfo.ProtoReflect.Descriptor instead.
func (*AchievementInfo) Descriptor() ([]byte, []int) {
	return file_inboxapi_achievement_proto_rawDescGZIP(), []int{3}
}

func (x *AchievementInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AchievementInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AchievementInfo) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *AchievementInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AchievementInfo) GetAchievementMessage() string {
	if x != nil {
		return x.AchievementMessage
	}
	return ""
}

func (x *AchievementInfo) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *AchievementInfo) GetProgress() *Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *AchievementInfo) GetAchievedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AchievedAt
	}
	return nil
}

func (x *AchievementInfo) GetViewedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ViewedAt
	}
	return nil
}

func (x *AchievementInfo) GetExclusive() bool {
	if x != nil {
		return x.Exclusive
	}
	return false
}

type AchievementList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AchievementInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AchievementList) Reset() {
	*x = AchievementList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inboxapi_achievement_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementList) ProtoMessage() {}

func (x *AchievementList) ProtoReflect() protoreflect.Message {
	mi := &file_inboxapi_achievement_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementList.ProtoReflect.Descriptor instead.
func (*AchievementList) Descriptor() ([]byte, []int) {
	return file_inboxapi_achievement_proto_rawDescGZIP(), []int{4}
}

func (x *AchievementList) GetList() []*AchievementInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type MarkAsViewedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AchievementId string `protobuf:"bytes,2,opt,name=achievement_id,json=achievementId,proto3" json:"achievement_id,omitempty"`
}

func (x *MarkAsViewedRequest) Reset() {
	*x = MarkAsViewedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inboxapi_achievement_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkAsViewedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsViewedRequest) ProtoMessage() {}

func (x *MarkAsViewedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inboxapi_achievement_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsViewedRequest.ProtoReflect.Descriptor instead.
func (*MarkAsViewedRequest) Descriptor() ([]byte, []int) {
	return file_inboxapi_achievement_proto_rawDescGZIP(), []int{5}
}

func (x *MarkAsViewedRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarkAsViewedRequest) GetAchievementId() string {
	if x != nil {
		return x.AchievementId
	}
	return ""
}

var File_inboxapi_achievement_proto protoreflect.FileDescriptor

var file_inboxapi_achievement_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x69, 0x6e,
	0x62, 0x6f, 0x78, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x38,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x93, 0x03, 0x0a, 0x0f, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x69, 0x6e, 0x62, 0x6f, 0x78, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x61,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x22,
	0x40, 0x0a, 0x0f, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x68, 0x69,
	0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x55, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xb2, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x69, 0x6e,
	0x62, 0x6f, 0x78, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x3b, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_inboxapi_achievement_proto_rawDescOnce sync.Once
	file_inboxapi_achievement_proto_rawDescData = file_inboxapi_achievement_proto_rawDesc
)

func file_inboxapi_achievement_proto_rawDescGZIP() []byte {
	file_inboxapi_achievement_proto_rawDescOnce.Do(func() {
		file_inboxapi_achievement_proto_rawDescData = protoimpl.X.CompressGZIP(file_inboxapi_achievement_proto_rawDescData)
	})
	return file_inboxapi_achievement_proto_rawDescData
}

var file_inboxapi_achievement_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_inboxapi_achievement_proto_goTypes = []any{
	(*GetUserAchievementListRequest)(nil), // 0: inboxapi.GetUserAchievementListRequest
	(*Progress)(nil),                      // 1: inboxapi.Progress
	(*Image)(nil),                         // 2: inboxapi.Image
	(*AchievementInfo)(nil),               // 3: inboxapi.AchievementInfo
	(*AchievementList)(nil),               // 4: inboxapi.AchievementList
	(*MarkAsViewedRequest)(nil),           // 5: inboxapi.MarkAsViewedRequest
	(*timestamppb.Timestamp)(nil),         // 6: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 7: google.protobuf.Empty
}
var file_inboxapi_achievement_proto_depIdxs = []int32{
	2, // 0: inboxapi.AchievementInfo.images:type_name -> inboxapi.Image
	1, // 1: inboxapi.AchievementInfo.progress:type_name -> inboxapi.Progress
	6, // 2: inboxapi.AchievementInfo.achieved_at:type_name -> google.protobuf.Timestamp
	6, // 3: inboxapi.AchievementInfo.viewed_at:type_name -> google.protobuf.Timestamp
	3, // 4: inboxapi.AchievementList.list:type_name -> inboxapi.AchievementInfo
	0, // 5: inboxapi.Achievement.GetUserAchievementList:input_type -> inboxapi.GetUserAchievementListRequest
	5, // 6: inboxapi.Achievement.MarkAsViewed:input_type -> inboxapi.MarkAsViewedRequest
	4, // 7: inboxapi.Achievement.GetUserAchievementList:output_type -> inboxapi.AchievementList
	7, // 8: inboxapi.Achievement.MarkAsViewed:output_type -> google.protobuf.Empty
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_inboxapi_achievement_proto_init() }
func file_inboxapi_achievement_proto_init() {
	if File_inboxapi_achievement_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inboxapi_achievement_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserAchievementListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inboxapi_achievement_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Progress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inboxapi_achievement_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inboxapi_achievement_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AchievementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inboxapi_achievement_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AchievementList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inboxapi_achievement_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MarkAsViewedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inboxapi_achievement_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inboxapi_achievement_proto_goTypes,
		DependencyIndexes: file_inboxapi_achievement_proto_depIdxs,
		MessageInfos:      file_inboxapi_achievement_proto_msgTypes,
	}.Build()
	File_inboxapi_achievement_proto = out.File
	file_inboxapi_achievement_proto_rawDesc = nil
	file_inboxapi_achievement_proto_goTypes = nil
	file_inboxapi_achievement_proto_depIdxs = nil
}
